Static webapp:
 - is a read-only website
 - we can't update, interact with the website

Dynamic webapps:
  - Read-Write: ability to change data
  - Highly interactive
  - Displays your data 
  - Examples:
    - Bank website
    - Airbnb
    - Reddit
    - Twitter
    - etc

In this module we'll learn about:
 - Event listeners
 - State
 - Conditional rendering
 - Forms
 - Side effects
 

 What is covered in this project:
 - Event listeners
 - State
 - Conditional rendering
 - Forms
 - Side effects

  --------------------- State

- We have to use state in order to update the data
  in React.

  Conceptual difference between props and state 

- Props refers to the properties being passed into 
  a component in order for it to work correctly, 
  similar to how a function receives parameters. 

- A component that receives props, is not allowed to 
  modify those props, they are immutable.
  (it doesn't make any sense for a function to 
  modify the parameters it's receiving)

Notes:

1. How would you describe the concept of "state"?
A way for React to remember saved values from within a component.
This is similar to declaring variables from within a component,
with a few added bonuses (which we'll get to later)


2. When would you want to use props instead of state?
Anytime you want to pass data into a component so that
component can determine what will get displayed on the
screen.


3. When would you want to use state instead of props?
Anytime you want a component to maintain some values from
within the component. (And "remember" those values even
when React re-renders the component).


4. What does "immutable" mean? Are props immutable? Is state immutable?
Unchanging. Props are immutable. State is mutable.